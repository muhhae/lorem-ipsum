package home

import (
	"github.com/muhhae/lorem-ipsum/internal/views/util"
	"strconv"
	"fmt"
)

type ReactData struct {
	PostID    string
	LikeCount int
	Value     int
}

type PostData struct {
	PostID       string
	Username     string
	Content      string
	ImgSrc       []string
	CommentCount int
	ReactStruct  ReactData
}

func olderPost(p PostData) string {
	return "/api/v1/post/Default?olderThan=" + p.PostID
}

func newerPost(p PostData) string {
	return "/api/v1/post/Default?newerThan=" + p.PostID
}

type ManyPostType int

const (
	ManyPostTypeBoth ManyPostType = iota
	ManyPostTypeNewer
	ManyPostTypeOlder
)

templ postLoader(url string, id string) {
	<div
		id={ id }
		hx-trigger="intersect, update"
		hx-swap="outerHTML"
		hx-get={ url }
		x-data="{
			loading: false,
		}"
		x-on:htmx:before-request="loading = true"
		x-on:htmx:after-request="loading = false"
		class="flex w-full justify-center"
	>
		<span x-show="loading" class="loading loading-spinner loading-lg"></span>
	</div>
}

templ ManyPost(postDatas []PostData, manyPostType ManyPostType) {
	if manyPostType == ManyPostTypeBoth || manyPostType == ManyPostTypeNewer {
		@postLoader(newerPost(postDatas[0]), "newer-post-loader")
	}
	for _, postData := range postDatas {
		@Post(postData)
	}
	if manyPostType == ManyPostTypeBoth || manyPostType == ManyPostTypeOlder {
		@postLoader(olderPost(postDatas[len(postDatas)-1]), "older-post-loader")
	}
}

templ Post(postData PostData) {
	<div
		x-data="{
            slide: 0,
            scroll: null
        }"
		class="w-full rounded-none card mb-2 p-4 text-base-content"
	>
		<div
			x-data="{
				scrollRight: (n) => {
					$el.scrollLeft += n * $el.offsetWidth;
				},
                onScroll : () => {
                    slide = Math.floor($el.scrollLeft / $el.offsetWidth);
                }
			}"
			x-init="scroll = scrollRight"
			x-on:scroll="onScroll()"
			class="lg:h-[35vw] h-[85vw] lg:w-[35vw] w-[85vw] mx-auto carousel carousel-center space-x-2 rounded-lg bg-transparent"
		>
			if len(postData.ImgSrc) > 1 {
				@swapButton(len(postData.ImgSrc))
			}
			for _, imgSrc := range postData.ImgSrc {
				<div class="carousel-item w-full">
					<img class="w-full h-full object-cover" src={ imgSrc } alt="Meme"/>
				</div>
			}
		</div>
		@swapIndicator(len(postData.ImgSrc), postData.PostID)
		<div class="card-body mt-4 p-2">
			<h2 class="card-title text-base-content font-bold">{ postData.Username }</h2>
			{ postData.Content }
		</div>
		@ReactSection(postData.ReactStruct)
		@LoadCommentBtn(CommentData{
			PostID:     postData.PostID,
			ReplyCount: postData.CommentCount,
		})
	</div>
}

templ swapIndicator(size int, id string) {
	if size > 1 {
		<div
			class="h-4 flex flex-row justify-center items-center  my-2 w-full"
		>
			for i := 0; i < size; i++ {
				<span
					class="cursor-pointer"
					x-on:click={ fmt.Sprintf("scroll(%d - slide); ", i) }
					x-show={ "slide !== " + strconv.Itoa(i) }
				>
					<svg
						class="flex-0 w-4 h-full object-contain"
						fill="currentColor"
						height="200px"
						width="200px"
						id="Layer_1"
						data-name="Layer 1"
						xmlns="http://www.w3.org/2000/svg"
						viewBox="0 0 16 16"
					>
						<g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
						<g id="SVGRepo_iconCarrier">
							<path class="cls-1" d="M8,2a6,6,0,1,0,6,6A6,6,0,0,0,8,2Zm0,9.42857A3.42857,3.42857,0,1,1,11.42857,8,3.42857,3.42857,0,0,1,8,11.42857Z"></path>
						</g>
					</svg>
				</span>
				<span
					x-show={ "slide === " + strconv.Itoa(i) }
				>
					<svg
						class="flex-0 w-4 h-full object-contain"
						fill="currentColor"
						height="256px"
						width="256px"
						id="Layer_1"
						xmlns="http://www.w3.org/2000/svg"
						viewBox="0 0 16 16"
						stroke="currentColor"
						stroke-width="1.6"
					>
						<g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" stroke="currentColor" stroke-width="0.064"></g>
						<g id="SVGRepo_iconCarrier">
							<circle class="cls-1" cx="8" cy="8" r="4"></circle>
						</g>
					</svg>
				</span>
			}
		</div>
	}
}

templ swapButton(size int) {
	<div
		x-show.important="slide > 0"
		class="flex flex-col justify-center items-start absolute top-4 lg:h-[35vw] h-[85vw] w-[17vw] lg:w-[7vw] left-6"
	>
		<span
			x-on:click="scrollRight(-1)"
			class="btn btn-circle border-0 hover:bg-neutral-100/30 bg-transparent text-neutral-950  btn-lg"
		>
			<svg
				class="w-4/5 h-4/5 object-contain"
				fill="currentColor"
				version="1.1"
				id="Capa_1"
				xmlns="http://www.w3.org/2000/svg"
				xmlns:xlink="http://www.w3.org/1999/xlink"
				viewBox="0 0 462.846 462.845"
				xml:space="preserve"
				transform="matrix(-1, 0, 0, 1, 0, 0)"
			>
				<g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
				<g id="SVGRepo_iconCarrier">
					<g>
						<g><path d="M173.113,4.671c-4.812-4.961-10.544-5.561-15.465-3.705c-2.829,0.366-5.683,1.488-8.331,3.705 c-21.018,17.61-41.223,36.122-60.667,55.467c-8.366,8.322-4.223,19.296,3.488,24.136c40.654,48.365,87.067,96.255,127.663,144.666 c-46.05,46.266-90.437,98.67-134.62,146.657c-4.956,5.383-5.152,11.73-2.775,16.92c0.378,4.936,3.364,9.455,7.663,12.781 c20.218,15.614,39.748,32.077,58.676,49.23c4.763,7.815,15.886,12.127,24.362,3.788c67.631-66.49,126.845-141.432,201.06-201.057 c2.036-1.636,3.407-3.428,4.261-5.281c4.245-5.586,5.316-13.649-0.798-20.251C308.419,156.975,244.086,77.817,173.113,4.671z M162.386,424.945c-14.83-13.086-30.039-25.689-45.562-37.942c42.155-47.078,85.617-97.578,130.822-141.879 c2.355-2.306,3.656-4.834,4.25-7.373c3.783-5.576,4.672-13.345-0.782-19.88c-41.015-49.129-87.973-97.629-129.219-146.558 c12.448-12.002,25.293-23.577,38.364-34.903c63.518,66.445,122.146,137.313,184.153,205.15 C277.899,296.685,223.053,363.73,162.386,424.945z"></path> </g>
					</g>
				</g>
			</svg>
		</span>
	</div>
	<div
		x-show={ fmt.Sprintf("slide < %d", size-1) }
		class="flex flex-col justify-center items-end absolute top-4 lg:h-[35vw] h-[85vw] w-[17vw] lg:w-[7vw] right-6"
	>
		<span
			x-on:click="scrollRight(1)"
			class="btn btn-circle border-0 hover:bg-neutral-100/30 bg-transparent text-neutral-950  btn-lg"
		>
			<svg
				class="w-4/5 h-4/5 object-contain"
				fill="currentColor"
				version="1.1"
				id="Capa_1"
				xmlns="http://www.w3.org/2000/svg"
				xmlns:xlink="http://www.w3.org/1999/xlink"
				viewBox="0 0 462.846 462.845"
				xml:space="preserve"
			>
				<g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
				<g id="SVGRepo_iconCarrier">
					<g>
						<g>
							<path d="M173.113,4.671c-4.812-4.961-10.544-5.561-15.465-3.705c-2.829,0.366-5.683,1.488-8.331,3.705 c-21.018,17.61-41.223,36.122-60.667,55.467c-8.366,8.322-4.223,19.296,3.488,24.136c40.654,48.365,87.067,96.255,127.663,144.666 c-46.05,46.266-90.437,98.67-134.62,146.657c-4.956,5.383-5.152,11.73-2.775,16.92c0.378,4.936,3.364,9.455,7.663,12.781 c20.218,15.614,39.748,32.077,58.676,49.23c4.763,7.815,15.886,12.127,24.362,3.788c67.631-66.49,126.845-141.432,201.06-201.057 c2.036-1.636,3.407-3.428,4.261-5.281c4.245-5.586,5.316-13.649-0.798-20.251C308.419,156.975,244.086,77.817,173.113,4.671z M162.386,424.945c-14.83-13.086-30.039-25.689-45.562-37.942c42.155-47.078,85.617-97.578,130.822-141.879 c2.355-2.306,3.656-4.834,4.25-7.373c3.783-5.576,4.672-13.345-0.782-19.88c-41.015-49.129-87.973-97.629-129.219-146.558 c12.448-12.002,25.293-23.577,38.364-34.903c63.518,66.445,122.146,137.313,184.153,205.15 C277.899,296.685,223.053,363.73,162.386,424.945z"></path>
						</g>
					</g>
				</g>
			</svg>
		</span>
	</div>
}

templ ReactSection(reactData ReactData) {
	<div
		x-data="{
			loading: false,
			timeout: null,
			inRequest: false,
			afterRequest: function() {
				this.inRequest = false;
				this.loading = false;
				clearTimeout(this.timeout);
			},
			beforeRequest: function() {
				this.inRequest = true;
				this.timeout = setTimeout(() => {
					this.loading = this.inRequest;
				}, 300);
			},
		}"
		class="react-section card-actions flex flex-col sm:flex-row w-full items-center justify-center my-4"
	>
		<span x-show="!loading">
			@LikeButton(reactData.Value == 1, reactData.PostID)
		</span>
		<span x-show="!loading">
			@LikeCount(reactData.LikeCount, reactData.PostID)
		</span>
		<span x-show="!loading">
			@DislikeButton(reactData.Value == -1, reactData.PostID)
		</span>
		<span x-show="loading" class="loading loading-lg loading-spinner"></span>
	</div>
}

templ LikeCount(likeCount int, postID string) {
	<div
		hx-get={ "/api/v1/reaction/count/" + postID }
		hx-trigger="intersect, update"
		x-on:htmx:after-request="afterRequest()"
		x-init="periodicIntersectUpdateObserver.observe($el)"
		hx-swap="innerHTML"
		class="like-count h-12 w-24 rounded-xl bg-primary font-mono font-black text-2xl text-primary-content text-center flex items-center justify-center"
	>
		{ util.Format(likeCount) }
	</div>
}

templ LikeButton(liked bool, postID string) {
	if liked {
		<button
			hx-post={ "/api/v1/reaction/react/" + postID + "?value=0" }
			hx-swap="none"
			hx-on::after-on-load="reactAndRefresh(event)"
			x-on:htmx:before-request="beforeRequest()"
			x-on:htmx:response-error="afterRequest()"
			class="like btn text-primary btn-ghost btn-lg text-2xl w-auto"
		>
			<svg
				class="h-3/4"
				viewBox="0 0 32 32"
				version="1.1"
				xmlns="http://www.w3.org/2000/svg"
				xmlns:xlink="http://www.w3.org/1999/xlink"
				xmlns:sketch="http://www.bohemiancoding.com/sketch/ns"
				fill="currentColor"
			>
				<g id="SVGRepo_bgCarrier" stroke-width="0"></g>
				<g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
				<g id="SVGRepo_iconCarrier">
					<title>arrow-up-circle</title>
					<desc>Created with Sketch Beta.</desc>
					<defs></defs>
					<g id="Page-1" stroke="none" stroke-width="1" fill="currentColor" fill-rule="evenodd" sketch:type="MSPage">
						<g
							id="Icon-Set-Filled"
							sketch:type="MSLayerGroup"
							transform="translate(-362.000000, -1089.000000)"
							fill="currentColor"
						>
							<path
								d="M384.535,1105.54 C384.145,1105.93 383.512,1105.93 383.121,1105.54 L379,1101.41 L379,1112 C379,1112.55 378.553,1113 378,1113 C377.447,1113 377,1112.55 377,1112 L377,1101.41 L372.879,1105.54 C372.488,1105.93 371.854,1105.93 371.465,1105.54 C371.074,1105.14 371.074,1104.51 371.465,1104.12 L377.121,1098.46 C377.361,1098.22 377.689,1098.15 378,1098.21 C378.311,1098.15 378.639,1098.22 378.879,1098.46 L384.535,1104.12 C384.926,1104.51 384.926,1105.14 384.535,1105.54 L384.535,1105.54 Z M378,1089 C369.163,1089 362,1096.16 362,1105 C362,1113.84 369.163,1121 378,1121 C386.837,1121 394,1113.84 394,1105 C394,1096.16 386.837,1089 378,1089 L378,1089 Z"
								id="arrow-up-circle"
								sketch:type="MSShapeGroup"
							></path>
						</g>
					</g>
				</g>
			</svg>
			Yahaha
		</button>
	} else {
		<button
			hx-post={ "/api/v1/reaction/react/" + postID + "?value=1" }
			hx-swap="none"
			hx-on::after-on-load="reactAndRefresh(event)"
			x-on:htmx:before-request="beforeRequest()"
			x-on:htmx:response-error="afterRequest()"
			class="like btn btn-ghost btn-lg text-2xl w-auto"
		>
			<svg
				class="h-3/4"
				viewBox="0 0 32 32"
				version="1.1"
				xmlns="http://www.w3.org/2000/svg"
				xmlns:xlink="http://www.w3.org/1999/xlink"
				xmlns:sketch="http://www.bohemiancoding.com/sketch/ns"
				fill="currentColor"
			>
				<g id="SVGRepo_bgCarrier" stroke-width="0"></g>
				<g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
				<g id="SVGRepo_iconCarrier">
					<title>arrow-up-circle</title>
					<desc>Created with Sketch Beta.</desc>
					<defs></defs>
					<g id="Page-1" stroke="none" stroke-width="1" fill="currentColor" fill-rule="evenodd" sketch:type="MSPage">
						<g
							id="Icon-Set-Filled"
							sketch:type="MSLayerGroup"
							transform="translate(-362.000000, -1089.000000)"
							fill="currentColor"
						>
							<path
								d="M384.535,1105.54 C384.145,1105.93 383.512,1105.93 383.121,1105.54 L379,1101.41 L379,1112 C379,1112.55 378.553,1113 378,1113 C377.447,1113 377,1112.55 377,1112 L377,1101.41 L372.879,1105.54 C372.488,1105.93 371.854,1105.93 371.465,1105.54 C371.074,1105.14 371.074,1104.51 371.465,1104.12 L377.121,1098.46 C377.361,1098.22 377.689,1098.15 378,1098.21 C378.311,1098.15 378.639,1098.22 378.879,1098.46 L384.535,1104.12 C384.926,1104.51 384.926,1105.14 384.535,1105.54 L384.535,1105.54 Z M378,1089 C369.163,1089 362,1096.16 362,1105 C362,1113.84 369.163,1121 378,1121 C386.837,1121 394,1113.84 394,1105 C394,1096.16 386.837,1089 378,1089 L378,1089 Z"
								id="arrow-up-circle"
								sketch:type="MSShapeGroup"
							></path>
						</g>
					</g>
				</g>
			</svg>
			Yahaha
		</button>
	}
}

templ DislikeButton(disliked bool, postID string) {
	if disliked {
		<button
			hx-post={ "/api/v1/reaction/react/" + postID + "?value=0" }
			hx-swap="none"
			hx-on::after-on-load="reactAndRefresh(event)"
			x-on:htmx:before-request="beforeRequest()"
			x-on:htmx:response-error="afterRequest()"
			class="dislike btn btn-ghost text-primary btn-lg text-2xl w-auto"
		>
			<svg
				class="sm:hidden block h-3/4"
				viewBox="0 0 32 32"
				version="1.1"
				xmlns="http://www.w3.org/2000/svg"
				xmlns:xlink="http://www.w3.org/1999/xlink"
				xmlns:sketch="http://www.bohemiancoding.com/sketch/ns"
				fill="currentColor"
				transform="matrix(1, 0, 0, -1, 0, 0)"
			>
				<g id="SVGRepo_bgCarrier" stroke-width="0"></g>
				<g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
				<g id="SVGRepo_iconCarrier">
					<title>arrow-up-circle</title>
					<desc>Created with Sketch Beta.</desc>
					<defs></defs>
					<g id="Page-1" stroke="none" stroke-width="1" fill="currentColor" fill-rule="evenodd" sketch:type="MSPage">
						<g
							id="Icon-Set-Filled"
							sketch:type="MSLayerGroup"
							transform="translate(-362.000000, -1089.000000)"
							fill="currentColor"
						>
							<path
								d="M384.535,1105.54 C384.145,1105.93 383.512,1105.93 383.121,1105.54 L379,1101.41 L379,1112 C379,1112.55 378.553,1113 378,1113 C377.447,1113 377,1112.55 377,1112 L377,1101.41 L372.879,1105.54 C372.488,1105.93 371.854,1105.93 371.465,1105.54 C371.074,1105.14 371.074,1104.51 371.465,1104.12 L377.121,1098.46 C377.361,1098.22 377.689,1098.15 378,1098.21 C378.311,1098.15 378.639,1098.22 378.879,1098.46 L384.535,1104.12 C384.926,1104.51 384.926,1105.14 384.535,1105.54 L384.535,1105.54 Z M378,1089 C369.163,1089 362,1096.16 362,1105 C362,1113.84 369.163,1121 378,1121 C386.837,1121 394,1113.84 394,1105 C394,1096.16 386.837,1089 378,1089 L378,1089 Z"
								id="arrow-up-circle"
								sketch:type="MSShapeGroup"
							></path>
						</g>
					</g>
				</g>
			</svg>
			Ahahay
			<svg
				class="sm:block hidden h-3/4"
				viewBox="0 0 32 32"
				version="1.1"
				xmlns="http://www.w3.org/2000/svg"
				xmlns:xlink="http://www.w3.org/1999/xlink"
				xmlns:sketch="http://www.bohemiancoding.com/sketch/ns"
				fill="currentColor"
				transform="matrix(1, 0, 0, -1, 0, 0)"
			>
				<g id="SVGRepo_bgCarrier" stroke-width="0"></g>
				<g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
				<g id="SVGRepo_iconCarrier">
					<title>arrow-up-circle</title>
					<desc>Created with Sketch Beta.</desc>
					<defs></defs>
					<g id="Page-1" stroke="none" stroke-width="1" fill="currentColor" fill-rule="evenodd" sketch:type="MSPage">
						<g
							id="Icon-Set-Filled"
							sketch:type="MSLayerGroup"
							transform="translate(-362.000000, -1089.000000)"
							fill="currentColor"
						>
							<path
								d="M384.535,1105.54 C384.145,1105.93 383.512,1105.93 383.121,1105.54 L379,1101.41 L379,1112 C379,1112.55 378.553,1113 378,1113 C377.447,1113 377,1112.55 377,1112 L377,1101.41 L372.879,1105.54 C372.488,1105.93 371.854,1105.93 371.465,1105.54 C371.074,1105.14 371.074,1104.51 371.465,1104.12 L377.121,1098.46 C377.361,1098.22 377.689,1098.15 378,1098.21 C378.311,1098.15 378.639,1098.22 378.879,1098.46 L384.535,1104.12 C384.926,1104.51 384.926,1105.14 384.535,1105.54 L384.535,1105.54 Z M378,1089 C369.163,1089 362,1096.16 362,1105 C362,1113.84 369.163,1121 378,1121 C386.837,1121 394,1113.84 394,1105 C394,1096.16 386.837,1089 378,1089 L378,1089 Z"
								id="arrow-up-circle"
								sketch:type="MSShapeGroup"
							></path>
						</g>
					</g>
				</g>
			</svg>
		</button>
	} else {
		<button
			hx-post={ "/api/v1/reaction/react/" + postID + "?value=-1" }
			hx-swap="none"
			hx-on::after-on-load="reactAndRefresh(event)"
			x-on:htmx:before-request="beforeRequest()"
			x-on:htmx:response-error="afterRequest()"
			class="dislike btn btn-ghost btn-lg text-2xl w-auto"
		>
			<svg
				class="sm:hidden block h-3/4"
				viewBox="0 0 32 32"
				version="1.1"
				xmlns="http://www.w3.org/2000/svg"
				xmlns:xlink="http://www.w3.org/1999/xlink"
				xmlns:sketch="http://www.bohemiancoding.com/sketch/ns"
				fill="currentColor"
				transform="matrix(1, 0, 0, -1, 0, 0)"
			>
				<g id="SVGRepo_bgCarrier" stroke-width="0"></g>
				<g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
				<g id="SVGRepo_iconCarrier">
					<title>arrow-up-circle</title>
					<desc>Created with Sketch Beta.</desc>
					<defs></defs>
					<g id="Page-1" stroke="none" stroke-width="1" fill="currentColor" fill-rule="evenodd" sketch:type="MSPage">
						<g
							id="Icon-Set-Filled"
							sketch:type="MSLayerGroup"
							transform="translate(-362.000000, -1089.000000)"
							fill="currentColor"
						>
							<path
								d="M384.535,1105.54 C384.145,1105.93 383.512,1105.93 383.121,1105.54 L379,1101.41 L379,1112 C379,1112.55 378.553,1113 378,1113 C377.447,1113 377,1112.55 377,1112 L377,1101.41 L372.879,1105.54 C372.488,1105.93 371.854,1105.93 371.465,1105.54 C371.074,1105.14 371.074,1104.51 371.465,1104.12 L377.121,1098.46 C377.361,1098.22 377.689,1098.15 378,1098.21 C378.311,1098.15 378.639,1098.22 378.879,1098.46 L384.535,1104.12 C384.926,1104.51 384.926,1105.14 384.535,1105.54 L384.535,1105.54 Z M378,1089 C369.163,1089 362,1096.16 362,1105 C362,1113.84 369.163,1121 378,1121 C386.837,1121 394,1113.84 394,1105 C394,1096.16 386.837,1089 378,1089 L378,1089 Z"
								id="arrow-up-circle"
								sketch:type="MSShapeGroup"
							></path>
						</g>
					</g>
				</g>
			</svg>
			Ahahay
			<svg
				class="sm:block hidden h-3/4"
				viewBox="0 0 32 32"
				version="1.1"
				xmlns="http://www.w3.org/2000/svg"
				xmlns:xlink="http://www.w3.org/1999/xlink"
				xmlns:sketch="http://www.bohemiancoding.com/sketch/ns"
				fill="currentColor"
				transform="matrix(1, 0, 0, -1, 0, 0)"
			>
				<g id="SVGRepo_bgCarrier" stroke-width="0"></g>
				<g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
				<g id="SVGRepo_iconCarrier">
					<title>arrow-up-circle</title>
					<desc>Created with Sketch Beta.</desc>
					<defs></defs>
					<g id="Page-1" stroke="none" stroke-width="1" fill="currentColor" fill-rule="evenodd" sketch:type="MSPage">
						<g
							id="Icon-Set-Filled"
							sketch:type="MSLayerGroup"
							transform="translate(-362.000000, -1089.000000)"
							fill="currentColor"
						>
							<path
								d="M384.535,1105.54 C384.145,1105.93 383.512,1105.93 383.121,1105.54 L379,1101.41 L379,1112 C379,1112.55 378.553,1113 378,1113 C377.447,1113 377,1112.55 377,1112 L377,1101.41 L372.879,1105.54 C372.488,1105.93 371.854,1105.93 371.465,1105.54 C371.074,1105.14 371.074,1104.51 371.465,1104.12 L377.121,1098.46 C377.361,1098.22 377.689,1098.15 378,1098.21 C378.311,1098.15 378.639,1098.22 378.879,1098.46 L384.535,1104.12 C384.926,1104.51 384.926,1105.14 384.535,1105.54 L384.535,1105.54 Z M378,1089 C369.163,1089 362,1096.16 362,1105 C362,1113.84 369.163,1121 378,1121 C386.837,1121 394,1113.84 394,1105 C394,1096.16 386.837,1089 378,1089 L378,1089 Z"
								id="arrow-up-circle"
								sketch:type="MSShapeGroup"
							></path>
						</g>
					</g>
				</g>
			</svg>
		</button>
	}
}

templ EndOfFeed() {
	<div class="divider">
		You've reached the bottom, get a Job!
	</div>
}
