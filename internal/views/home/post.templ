package home

import "github.com/muhhae/lorem-ipsum/internal/views/util"

// import "strconv"

type ReactData struct {
	PostID    string
	LikeCount int
	Value     int
}

type PostData struct {
	PostID       string
	Username     string
	Content      string
	ImgSrc       []string
	CommentCount int
	ReactStruct  ReactData
}

func olderPost(p PostData) string {
	return "/api/v1/post/Default?olderThan=" + p.PostID
}

func newerPost(p PostData) string {
	return "/api/v1/post/Default?newerThan=" + p.PostID
}

type ManyPostType int

const (
	ManyPostTypeBoth ManyPostType = iota
	ManyPostTypeNewer
	ManyPostTypeOlder
)

templ postLoader(url string, id string) {
	<div
		id={ id }
		hx-trigger="intersect, update"
		hx-swap="outerHTML"
		hx-get={ url }
		x-data="{
			loading: false,
		}"
		x-on:htmx:before-request="loading = true"
		x-on:htmx:after-request="loading = false"
		class="flex w-full justify-center"
	>
		<span x-show="loading" class="loading loading-spinner loading-lg"></span>
	</div>
}

templ ManyPost(postDatas []PostData, manyPostType ManyPostType) {
	if manyPostType == ManyPostTypeBoth || manyPostType == ManyPostTypeNewer {
		@postLoader(newerPost(postDatas[0]), "newer-post-loader")
	}
	for _, postData := range postDatas {
		<div class="w-full rounded-none card mb-2 p-4 text-base-content">
			for _, imgSrc := range postData.ImgSrc {
				<img
					class="w-full h-full object-cover"
					src={ imgSrc }
					alt="Meme"
				/>
			}
			<div class="card-body mt-4 p-2">
				<h2 class="card-title text-base-content font-bold">{ postData.Username }</h2>
				{ postData.Content }
			</div>
			@ReactSection(postData.ReactStruct)
			@LoadCommentBtn(CommentData{
				PostID: 	 postData.PostID,
				ReplyCount: postData.CommentCount,
			})
		</div>
	}
	if manyPostType == ManyPostTypeBoth || manyPostType == ManyPostTypeOlder {
		@postLoader(olderPost(postDatas[len(postDatas)-1]), "older-post-loader")
	}
}

templ ReactSection(reactData ReactData) {
	<div
		x-data="{
			loading: false,
			timeout: null,
			inRequest: false,
			afterRequest: function() {
				this.inRequest = false;
				this.loading = false;
				clearTimeout(this.timeout);
			},
			beforeRequest: function() {
				this.inRequest = true;
				this.timeout = setTimeout(() => {
					this.loading = this.inRequest;
				}, 300);
			},
		}"
		class="react-section card-actions flex flex-col sm:flex-row w-full items-center justify-center my-4"
	>
		<span x-show="!loading">
			@LikeButton(reactData.Value == 1, reactData.PostID)
		</span>
		<span x-show="!loading">
			@LikeCount(reactData.LikeCount, reactData.PostID)
		</span>
		<span x-show="!loading">
			@DislikeButton(reactData.Value == -1, reactData.PostID)
		</span>
		<span x-show="loading" class="loading loading-lg loading-spinner"></span>
	</div>
}

templ LikeCount(likeCount int, postID string) {
	<div
		hx-get={ "/api/v1/reaction/count/" + postID }
		hx-trigger="intersect, update"
		x-on:htmx:after-request="afterRequest()"
		x-init="periodicIntersectUpdateObserver.observe($el)"
		hx-swap="innerHTML"
		class="like-count h-12 w-24 rounded-xl bg-primary font-mono font-black text-2xl text-primary-content text-center flex items-center justify-center"
	>
		{ util.Format(likeCount) }
	</div>
}

templ LikeButton(liked bool, postID string) {
	if liked {
		<button
			hx-post={ "/api/v1/reaction/react/" + postID + "?value=0" }
			hx-swap="none"
			hx-on::after-on-load="reactAndRefresh(event)"
			x-on:htmx:before-request="beforeRequest()"
			x-on:htmx:response-error="afterRequest()"
			class="like btn text-primary btn-ghost btn-lg text-2xl w-auto"
		>
			<svg class="h-3/4" viewBox="0 0 32 32" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns" fill="currentColor"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><title>arrow-up-circle</title> <desc>Created with Sketch Beta.</desc> <defs></defs> <g id="Page-1" stroke="none" stroke-width="1" fill="currentColor" fill-rule="evenodd" sketch:type="MSPage"><g id="Icon-Set-Filled" sketch:type="MSLayerGroup" transform="translate(-362.000000, -1089.000000)" fill="currentColor"><path d="M384.535,1105.54 C384.145,1105.93 383.512,1105.93 383.121,1105.54 L379,1101.41 L379,1112 C379,1112.55 378.553,1113 378,1113 C377.447,1113 377,1112.55 377,1112 L377,1101.41 L372.879,1105.54 C372.488,1105.93 371.854,1105.93 371.465,1105.54 C371.074,1105.14 371.074,1104.51 371.465,1104.12 L377.121,1098.46 C377.361,1098.22 377.689,1098.15 378,1098.21 C378.311,1098.15 378.639,1098.22 378.879,1098.46 L384.535,1104.12 C384.926,1104.51 384.926,1105.14 384.535,1105.54 L384.535,1105.54 Z M378,1089 C369.163,1089 362,1096.16 362,1105 C362,1113.84 369.163,1121 378,1121 C386.837,1121 394,1113.84 394,1105 C394,1096.16 386.837,1089 378,1089 L378,1089 Z" id="arrow-up-circle" sketch:type="MSShapeGroup"></path> </g> </g> </g></svg>
			Yahaha
		</button>
	} else {
		<button
			hx-post={ "/api/v1/reaction/react/" + postID + "?value=1" }
			hx-swap="none"
			hx-on::after-on-load="reactAndRefresh(event)"
			x-on:htmx:before-request="beforeRequest()"
			x-on:htmx:response-error="afterRequest()"
			class="like btn btn-ghost btn-lg text-2xl w-auto"
		>
			<svg class="h-3/4" viewBox="0 0 32 32" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns" fill="currentColor"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><title>arrow-up-circle</title> <desc>Created with Sketch Beta.</desc> <defs></defs> <g id="Page-1" stroke="none" stroke-width="1" fill="currentColor" fill-rule="evenodd" sketch:type="MSPage"><g id="Icon-Set-Filled" sketch:type="MSLayerGroup" transform="translate(-362.000000, -1089.000000)" fill="currentColor"><path d="M384.535,1105.54 C384.145,1105.93 383.512,1105.93 383.121,1105.54 L379,1101.41 L379,1112 C379,1112.55 378.553,1113 378,1113 C377.447,1113 377,1112.55 377,1112 L377,1101.41 L372.879,1105.54 C372.488,1105.93 371.854,1105.93 371.465,1105.54 C371.074,1105.14 371.074,1104.51 371.465,1104.12 L377.121,1098.46 C377.361,1098.22 377.689,1098.15 378,1098.21 C378.311,1098.15 378.639,1098.22 378.879,1098.46 L384.535,1104.12 C384.926,1104.51 384.926,1105.14 384.535,1105.54 L384.535,1105.54 Z M378,1089 C369.163,1089 362,1096.16 362,1105 C362,1113.84 369.163,1121 378,1121 C386.837,1121 394,1113.84 394,1105 C394,1096.16 386.837,1089 378,1089 L378,1089 Z" id="arrow-up-circle" sketch:type="MSShapeGroup"></path> </g> </g> </g></svg>
			Yahaha
		</button>
	}
}

templ DislikeButton(disliked bool, postID string) {
	if disliked {
		<button
			hx-post={ "/api/v1/reaction/react/" + postID + "?value=0" }
			hx-swap="none"
			hx-on::after-on-load="reactAndRefresh(event)"
			x-on:htmx:before-request="beforeRequest()"
			x-on:htmx:response-error="afterRequest()"
			class="dislike btn btn-ghost text-primary btn-lg text-2xl w-auto"
		>
			<svg class="sm:hidden block h-3/4" viewBox="0 0 32 32" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns" fill="currentColor" transform="matrix(1, 0, 0, -1, 0, 0)"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><title>arrow-up-circle</title> <desc>Created with Sketch Beta.</desc> <defs></defs> <g id="Page-1" stroke="none" stroke-width="1" fill="currentColor" fill-rule="evenodd" sketch:type="MSPage"><g id="Icon-Set-Filled" sketch:type="MSLayerGroup" transform="translate(-362.000000, -1089.000000)" fill="currentColor"><path d="M384.535,1105.54 C384.145,1105.93 383.512,1105.93 383.121,1105.54 L379,1101.41 L379,1112 C379,1112.55 378.553,1113 378,1113 C377.447,1113 377,1112.55 377,1112 L377,1101.41 L372.879,1105.54 C372.488,1105.93 371.854,1105.93 371.465,1105.54 C371.074,1105.14 371.074,1104.51 371.465,1104.12 L377.121,1098.46 C377.361,1098.22 377.689,1098.15 378,1098.21 C378.311,1098.15 378.639,1098.22 378.879,1098.46 L384.535,1104.12 C384.926,1104.51 384.926,1105.14 384.535,1105.54 L384.535,1105.54 Z M378,1089 C369.163,1089 362,1096.16 362,1105 C362,1113.84 369.163,1121 378,1121 C386.837,1121 394,1113.84 394,1105 C394,1096.16 386.837,1089 378,1089 L378,1089 Z" id="arrow-up-circle" sketch:type="MSShapeGroup"></path> </g> </g> </g></svg>
			Ahahay
			<svg class="sm:block hidden h-3/4" viewBox="0 0 32 32" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns" fill="currentColor" transform="matrix(1, 0, 0, -1, 0, 0)"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><title>arrow-up-circle</title> <desc>Created with Sketch Beta.</desc> <defs></defs> <g id="Page-1" stroke="none" stroke-width="1" fill="currentColor" fill-rule="evenodd" sketch:type="MSPage"><g id="Icon-Set-Filled" sketch:type="MSLayerGroup" transform="translate(-362.000000, -1089.000000)" fill="currentColor"><path d="M384.535,1105.54 C384.145,1105.93 383.512,1105.93 383.121,1105.54 L379,1101.41 L379,1112 C379,1112.55 378.553,1113 378,1113 C377.447,1113 377,1112.55 377,1112 L377,1101.41 L372.879,1105.54 C372.488,1105.93 371.854,1105.93 371.465,1105.54 C371.074,1105.14 371.074,1104.51 371.465,1104.12 L377.121,1098.46 C377.361,1098.22 377.689,1098.15 378,1098.21 C378.311,1098.15 378.639,1098.22 378.879,1098.46 L384.535,1104.12 C384.926,1104.51 384.926,1105.14 384.535,1105.54 L384.535,1105.54 Z M378,1089 C369.163,1089 362,1096.16 362,1105 C362,1113.84 369.163,1121 378,1121 C386.837,1121 394,1113.84 394,1105 C394,1096.16 386.837,1089 378,1089 L378,1089 Z" id="arrow-up-circle" sketch:type="MSShapeGroup"></path> </g> </g> </g></svg>
		</button>
	} else {
		<button
			hx-post={ "/api/v1/reaction/react/" + postID + "?value=-1" }
			hx-swap="none"
			hx-on::after-on-load="reactAndRefresh(event)"
			x-on:htmx:before-request="beforeRequest()"
			x-on:htmx:response-error="afterRequest()"
			class="dislike btn btn-ghost btn-lg text-2xl w-auto"
		>
			<svg class="sm:hidden block h-3/4" viewBox="0 0 32 32" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns" fill="currentColor" transform="matrix(1, 0, 0, -1, 0, 0)"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><title>arrow-up-circle</title> <desc>Created with Sketch Beta.</desc> <defs></defs> <g id="Page-1" stroke="none" stroke-width="1" fill="currentColor" fill-rule="evenodd" sketch:type="MSPage"><g id="Icon-Set-Filled" sketch:type="MSLayerGroup" transform="translate(-362.000000, -1089.000000)" fill="currentColor"><path d="M384.535,1105.54 C384.145,1105.93 383.512,1105.93 383.121,1105.54 L379,1101.41 L379,1112 C379,1112.55 378.553,1113 378,1113 C377.447,1113 377,1112.55 377,1112 L377,1101.41 L372.879,1105.54 C372.488,1105.93 371.854,1105.93 371.465,1105.54 C371.074,1105.14 371.074,1104.51 371.465,1104.12 L377.121,1098.46 C377.361,1098.22 377.689,1098.15 378,1098.21 C378.311,1098.15 378.639,1098.22 378.879,1098.46 L384.535,1104.12 C384.926,1104.51 384.926,1105.14 384.535,1105.54 L384.535,1105.54 Z M378,1089 C369.163,1089 362,1096.16 362,1105 C362,1113.84 369.163,1121 378,1121 C386.837,1121 394,1113.84 394,1105 C394,1096.16 386.837,1089 378,1089 L378,1089 Z" id="arrow-up-circle" sketch:type="MSShapeGroup"></path> </g> </g> </g></svg>
			Ahahay
			<svg class="sm:block hidden h-3/4" viewBox="0 0 32 32" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns" fill="currentColor" transform="matrix(1, 0, 0, -1, 0, 0)"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><title>arrow-up-circle</title> <desc>Created with Sketch Beta.</desc> <defs></defs> <g id="Page-1" stroke="none" stroke-width="1" fill="currentColor" fill-rule="evenodd" sketch:type="MSPage"><g id="Icon-Set-Filled" sketch:type="MSLayerGroup" transform="translate(-362.000000, -1089.000000)" fill="currentColor"><path d="M384.535,1105.54 C384.145,1105.93 383.512,1105.93 383.121,1105.54 L379,1101.41 L379,1112 C379,1112.55 378.553,1113 378,1113 C377.447,1113 377,1112.55 377,1112 L377,1101.41 L372.879,1105.54 C372.488,1105.93 371.854,1105.93 371.465,1105.54 C371.074,1105.14 371.074,1104.51 371.465,1104.12 L377.121,1098.46 C377.361,1098.22 377.689,1098.15 378,1098.21 C378.311,1098.15 378.639,1098.22 378.879,1098.46 L384.535,1104.12 C384.926,1104.51 384.926,1105.14 384.535,1105.54 L384.535,1105.54 Z M378,1089 C369.163,1089 362,1096.16 362,1105 C362,1113.84 369.163,1121 378,1121 C386.837,1121 394,1113.84 394,1105 C394,1096.16 386.837,1089 378,1089 L378,1089 Z" id="arrow-up-circle" sketch:type="MSShapeGroup"></path> </g> </g> </g></svg>
		</button>
	}
}

templ EndOfFeed() {
	<div class="divider">
		You've reached the bottom, get a Job!
	</div>
}
