package home

// import "github.com/muhhae/lorem-ipsum/internal/database/comment"
import "github.com/muhhae/lorem-ipsum/internal/views/util"

type CommentData struct {
	PostID     string
	CommentID  string
	Content    string
	Username   string
	ReplyCount int
}

templ CommentInput(url string) {
	<div
		x-data="{ 
			open: false,
			loading: false,
			toggle() {
				this.open = !this.open;
			}
		}"
		class="mt-4"
	>
		<button x-on:click="toggle()" class="btn btn-outline w-full my-4 text-xl">Add Comment</button>
		<form
			hx-post={ url }
			hx-swap="none"
			class="w-full join join-vertical"
			x-show="open"
			x-on:htmx:before-request="loading = true"
			x-on:htmx:after-request="$event.target.reset();loading = false;"
		>
			<textarea name="content" class="join-item textarea textarea-bordered w-full" rows="3" placeholder="Comment..."></textarea>
			<div x-show="loading" class="join-item mb-2 btn btn-outline text-lg">
				<span class="loading loading-lg loading-dots mx-auto "></span>
			</div>
			<button x-show="!loading" type="submit" class="join-item mb-2 btn btn-outline w-full text-lg">Send</button>
		</form>
	</div>
}

templ ReplyInput(url string) {
	<div
		x-data="{ 
			open: false,
			loading: false,
			toggle() {
				this.open = !this.open;
			}
		}"
	>
		<button x-on:click="toggle()" class="mb-2 btn btn-xs btn-outline w-full text-md">Reply</button>
		<form
			hx-swap="none"
			hx-post={ url }
			class="w-full join join-vertical"
			x-show="open"
			x-on:htmx:before-request="loading = true"
			x-on:htmx:after-request="$event.target.reset();loading = false;"
		>
			<textarea name="content" class="join-item textarea textarea-bordered w-full" rows="3" placeholder="Reply..."></textarea>
			<div x-show="loading" class="join-item mb-2 btn btn-outline btn-xs text-md">
				<span class="loading loading-md loading-dots mx-auto "></span>
			</div>
			<button x-show="!loading" type="submit" class="join-item mb-2 btn btn-xs btn-outline w-full text-md">Send</button>
		</form>
	</div>
}

templ LoadCommentBtn(postID string, commentCount int) {
	<div
		x-data="{ 
			open: false,
			showText: 'Show',
			toggle() {
				this.open = !this.open;
				if (this.open) {
					this.showText = 'Hide';
				} else {
					this.showText = 'Show';
				}
			} 
		}"
	>
		<div class=" divider">
			<button
				x-on:click="toggle()"
				class="btn btn-ghost"
			><span x-text="showText"></span> {  util.Format(commentCount) } Comments</button>
		</div>
		@CommentInput("/api/v1/comment/send/"+postID) {
		}
		<div x-show="open">
			<div
				id="loader"
				hx-trigger="intersect"
				hx-swap="outerHTML"
				hx-get={ "/api/v1/comment/post/" + postID }
				class="loading loading-dots loading-xs mx-auto"
			></div>
		</div>
	</div>
}

templ LoadReplyBtn(postID string, commentID string, replyCount int) {
	<div
		x-data="{ 
			open: false,
			showText: 'Show',
			toggle() {
				this.open = !this.open;
				if (this.open) {
					this.showText = 'Hide';
				} else {
					this.showText = 'Show';
				}
			} 
		}"
	>
		<div class=" divider">
			<button
				x-on:click="toggle()"
				class="btn btn-xs text-sm btn-ghost"
			><span x-text="showText"></span> {  util.Format(replyCount) } Replies</button>
		</div>
		@ReplyInput("/api/v1/comment/send/"+postID+"?replying=" + commentID) {
		}
		<div x-show="open">
			<div
				id="loader"
				hx-trigger="intersect"
				hx-swap="outerHTML"
				hx-get={ "/api/v1/comment/reply/" + commentID }
				class="loading loading-dots loading-xs mx-auto"
			></div>
		</div>
	</div>
}

templ LoadedComment(comments []CommentData) {
	<div>
		for _, comment := range comments {
			@Comment(comment)
		}
	</div>
}

templ Comment(c CommentData) {
	<div class="flex">
		<div class="pt-2 divider divider-start divider-horizontal">
			<div class="avatar">
				<div class="w-12 rounded">
					<img src="https://daisyui.com/images/stock/photo-1534528741775-53994a69daeb.jpg"/>
				</div>
			</div>
		</div>
		<div class="w-full ml-3 py-2">
			<div class="text-md font-black">
				{ c.Username }
			</div>
			<div class="text-sm">
				{ c.Content }
			</div>
			@LoadReplyBtn(c.PostID, c.CommentID, c.ReplyCount) {
			}
		</div>
	</div>
}
